from sqlalchemy import DECIMAL, ScalarResult

from database.models import FinalCarts
from database.db_utills import db_get_final_carts_by_chat_id


def text_for_caption(name: str, description: str, price: DECIMAL) -> str:
    """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞"""

    text = (f"<b>{name}</b>\n\n"
            f"<b>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</b> {description}\n"
            f"<b>–¶–µ–Ω–∞:</b> {price} —Å—É–º")

    return text


def counting_products_from_final_carts(chat_id: int, user_text: str) -> tuple:
    """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–∞ (—Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏—Ç–æ–≥–æ–≤–æ–π –∫–æ—Ä–∑–∏–Ω—ã)"""

    final_carts = db_get_final_carts_by_chat_id(chat_id)

    text = f"<b>{user_text}:</b>\n\n"
    total_final_qty = total_final_price = count = 0
    cart_id = None

    for count, cart in enumerate(final_carts, 1):
        if cart_id is None:
            cart_id = cart.cart_id
        total_final_qty += cart.quantity
        total_final_price += cart.final_price
        text += (f"<b>{count}.</b> {cart.product_name}\n"
                 f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {cart.quantity} —à—Ç.\n"
                 f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {cart.final_price}\n\n")

    if count == 0:
        return 0, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞ üòû, –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑? üí∞', 0, 0

    text += (f"<b>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:</b> {total_final_qty} —à—Ç.\n"
             f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã:</b> {total_final_price} —Å—É–º")

    return count, text, total_final_price, cart_id
